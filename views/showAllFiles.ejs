
<!-- APP MAIN ==========-->
<main id="app-main" class="app-main">
	<div class="wrap">
	  <section class="app-content">
		  <div class="row">
			  <div class="col-md-12 col-sm-12">
				  <div class="widget p-md clearfix">
					  <div class="pull-left">
						  <h3 class="widget-title">Welcome to ScrollMantra</h3>
					  </div>
  
				  </div><!-- .widget -->
			  </div>
  
		  </div><!-- .row -->
  
		  <div class="row">
			  <div class="col-md-12">
				  <div class="widget">
					  <header class="widget-header">
						  <h4 class="widget-title">Uploaded Files</h4>
					  </header>
					  <hr class="widget-separator"/>
					  <div class="row">
						  <div class="col-sm-8">
							<input type="text" class="widget form-control" placeholder="Enter the Name of File" id="searchTerm"/>
						  </div>
						  <div class="col-sm-2">
							<input type="button" class="btn btn-primary" value="Search" id="search"/>
						  </div>
					  </div>

					  <div class="widget-body">
						  <div class="table-responsive">							
							  <table class="table no-cellborder" id="table">
								  <thead>
									  <tr>
										 <th>Name</th>
										 <th>Email</th>
										 <th>File Name</th>
										  <th>Type</th>
										  <th>Bucket Name</th>
										  <th>Folder Name</th>
										  <th>Created At</th>
											<th>Download</th>
										</tr>
								  </thead>
								  <tbody id="userlist">
								  </tbody>
							  </table>
						  </div>
					  </div>
				  </div><!-- .widget -->
			  </div><!-- END column -->
  
		  
		  </div><!-- .row -->
  
	  </section><!-- #dash-content -->
  </div><!-- .wrap -->
	<!-- APP FOOTER -->
	<div class="wrap p-t-0">
	  <footer class="app-footer">
		<div class="clearfix">
		  <div class="copyright pull-left">&copy; 2021 | All Rights Reserved | Scroll Mantra </div>
		</div>
	  </footer>
	</div>
	<!-- /#app-footer -->
  </main>
  <!--========== END app main -->
  
  
  
<script>
document.addEventListener("DOMContentLoaded",()=>{

	document.getElementById("userlist").addEventListener("click", (e) =>{
	
		  if(e.target.classList.contains("delete")){
	 		let bucketname = e.target.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.textContent
			let filename = e.target.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.textContent
			// console.log(bucketname,filename)
			fetch(`/ajaxupload2/${bucketname}`)
			 .then(data => data.json())
			 .then(response => {
				let flag = true
				 response.result1.find( fname => {
					 let newfilename = fname.split("/").pop().split(".")[0]
					 console.log(newfilename)
					 if(newfilename == filename){
						flag = false
					}
				 })
				 if(!flag){
					 alert("test")
					window.open(e.target.value,'Download')
				 }else{
					 alert("This file has been deleted")
					 return
				 }
			 })
			 .catch(err => alert(err))
		  }
	  })

	fetch("/adminshowallfiles")
		.then(data => data.json())
		.then(result => {
		const list = document.querySelector("#userlist");
		result.map(res =>{
			const row = document.createElement('tr');
        row.innerHTML = `
		<td>${res.username}</td>
					<td>${res.email}</td>
					<td>${res.filename}</td>
                    <td>${res.extname}</td>
                    <td>${res.bucketname}</td>
					<td>${res.foldername}</td>
                    <td>${res.createdAt}</td>
					<td><button class="btn btn-primary delete">Download</button></td>
					<td style="display:none">${res.url}</td>
                    `;
        list.appendChild(row);
		})
		dynamicBtn()

		})
})
document.getElementById("search").addEventListener("click",() => {
	let filename = document.getElementById("searchTerm").value;
	if(filename!=""){
		fetch(`/search/${filename}`)
			.then(result => result.json())
			.then(result => {
				const list = document.querySelector("#userlist");
				list.innerHTML =''
		result.map(res =>{
			const row = document.createElement('tr');
        row.innerHTML = `
		<td>${res.username}</td>
					<td>${res.email}</td>
					<td>${res.filename}</td>
                    <td>${res.extname}</td>
                    <td>${res.bucketname}</td>
					<td>${res.foldername}</td>
                    <td>${res.createdAt}</td>
					<td><button class="btn btn-primary delete">Download</button></td>
					<td style="display:none">${res.url}</td>
                    `;
        list.appendChild(row);
			
	})
	dynamicBtn()

			})
	}else{
		
	fetch("/adminshowallfiles")
		.then(data => data.json())
		.then(result => {
		const list = document.querySelector("#userlist");
		list.innerHTML = ''
		result.map(res =>{
			const row = document.createElement('tr');
        row.innerHTML = `
					<td>${res.username}</td>
					<td>${res.email}</td>
					<td>${res.filename}</td>
                    <td>${res.extname}</td>
                    <td>${res.bucketname}</td>
					<td>${res.foldername}</td>
                    <td>${res.createdAt}</td>
					<td><button class="btn btn-primary delete">Download</button></td>
					<td style="display:none">${res.url}</td>
                    `;
        list.appendChild(row);
		}
		)
		dynamicBtn()
		})
	}

})
function downloadFile(filename,bucketname,foldername,extname,requiredUrl){
	
	fetch("/downloads3file",{
		method: 'POST', // or 'PUT'
		headers: {
			'Content-Type': 'application/json',
		},
		body:JSON.stringify({
			foldername:foldername,
			bucketName:bucketname,
			filename:filename,
			extname:extname,
			url:requiredUrl.substring(1)
		})
	})
	.then(res => res.json())
	.then(res =>{
		// console.log(res)
		let byteArray = new Uint8Array(res.data.Body.data);
		let blob=new Blob([byteArray], {type: res.data.ContentType})
		let link=document.createElement('a');
		link.href=window.URL.createObjectURL(blob);
		link.download=res.filename;
		link.click();
	})
	.catch(err => console.log(err))
}
function dynamicBtn(){
let btn = document.getElementsByClassName("delete")
let btn2 = Array.from(btn)
btn2.map(btn1 => btn1.addEventListener("click",(e)=>{
	let foldername = e.target.parentElement.previousElementSibling.previousElementSibling.textContent
	let bucketname = e.target.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.textContent
	let extname = e.target.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.textContent
	let filename = e.target.parentElement.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.textContent
	let url = e.target.parentElement.nextElementSibling.textContent
	let requiredUrl = url.split("//")[1].split(".com")[1]
	downloadFile(filename,bucketname,foldername,extname,decodeURI(requiredUrl))	
})
)
}
</script>  