
<!-- APP MAIN ==========-->
<main id="app-main" class="app-main">
    <div class="wrap">
      <section class="app-content">
          <div class="row">
              <div class="col-md-12">
                  <div class="widget">
                      <header class="widget-header">
                          <h4 class="widget-title">Show AllFiles</h4>
                      </header><!-- .widget-header -->
                      <hr class="widget-separator">
            <%- include('partials/messages') %>
          
                      <div class="widget-body">
                <form method="post"  action="/deletefile" >
                  <div class="form-group">
                     <label for="exampleInputEmail1">Chose Bucket</label> 
                     <select class="form-control" id="bucketname" onchange="selectChange(this)" name="bucketname" > 
                      <option class="form-control" value=""></option>					
                      <% buckets.forEach(user => { %>
                        <option class="form-control" value=<%= user.Name %>><%= user.Name %></option>
                    <% });%>

                      </select> 
                    </div> 
                    <div class="form-group"> 
                      <label for="exampleInputPassword1">Folder Name</label> 
                      <select class="form-control" id="folder" onchange="selectChange1(this)" name="folder" > 
                      </select>
                  
                     </div> 
  </form>
                          <hr class="widget-separator">
                          <div class="table-responsive">							
                            <table class="table no-cellborder">
                              <thead>
                                <tr>
                                 <th>File Name</th>
                                  <th>Download</th>
                                </tr>
                              </thead>
                              <tbody id="userlist">
                              </tbody>
                            </table>
                          </div>
                      </div><!-- .widget-body -->
                  </div><!-- .widget -->
              </div><!-- END column -->
          </div><!-- .row -->
      </section><!-- #dash-content -->
  </div><!-- .wrap -->
    <!-- APP FOOTER -->
    <div class="wrap p-t-0">
      <footer class="app-footer">
        <div class="clearfix">
          <div class="copyright pull-left"> &copy;2021 | All Rights Reserved | Scroll Mantra</div>
        </div>
      </footer>
    </div>
    <!-- /#app-footer -->
  </main>
  <!--========== END app main -->
  
  <script>
    let fullresult = [];    
    let bucketname;
    function selectChange(e){ 
		if(document.getElementById("bucketname").value== ""){
		document.getElementById("folder").value = ''
		document.getElementById("userlist").innerHTML = ''
		}
      bucketname = e.value
      // console.log(bucketname)
      var xmlhttp = new XMLHttpRequest();
      xmlhttp.onreadystatechange = function() {
      if (xmlhttp.readyState == 4&& xmlhttp.status == 200) {   // XMLHttpRequest.DONE == 4
       if (xmlhttp.status == 200) {

         let result = JSON.parse(xmlhttp.responseText)
        fullresult = result.result1;
         let result1 = [];
         for(let i=0;i<result.result.length;i++){
         if(result.result[i].split("/")[1].length ==0)
          result1.push(result.result[i]);
         }
        let select = document.getElementById("folder")
        if(select.options.length !=0) select.innerHTML = ''
        let opt1 = document.createElement("option")
        opt1.value=''
        opt1.innerHTML=''
        select.appendChild(opt1) 
		result1.forEach(name =>{
          let opt = document.createElement('option');
          opt.value = name;
          opt.innerHTML = name;
          select.appendChild(opt);
         })
          //  document.getElementById("myDiv").innerHTML = xmlhttp.responseText;
       }
       else if (xmlhttp.status == 400) {
          alert('There was an error 400');
       }
       else {
           alert('something else other than 200 was returned');
       }
    }
  };
  
  xmlhttp.open("GET", `ajaxupload2/${e.value}`, true);
  xmlhttp.send();
  
    }
    function selectChange1(e){

      let lastresult=[];
      console.log("test");
      while(lastresult.length){
        lastresult.pop()
      }
      console.log(fullresult)
      fullresult.map( result => {
        let foldername = result.split('/')[0].toLowerCase()
        let selectedfoldername = e.value.split('/')[0].toLowerCase()
        // console.log(foldername,selectedfoldername)
 
          if(foldername === selectedfoldername){         
	  if(result.split('/').length==2)
          lastresult.push({url:`https://${bucketname}.s3.amazonaws.com/${foldername}/${result.split('/')[1]}`,filename:result})
          else
          lastresult.push({url:`https://${bucketname}.s3.amazonaws.com/${result}`,filename:result})
        }
    })
    

        const list = document.querySelector("#userlist");
      list.innerHTML =''
		lastresult.map(res =>{
			const row = document.createElement('tr');
        row.innerHTML = `
            <td>${res.filename}</td>
					<td><a href="${res.url}" target="_blank" class="btn btn-info" >Download File</a></td>
                    `;
        list.appendChild(row);
		})
  
  }

  document.getElementById("userlist").addEventListener("click",(e)=>{
    if(e.target.classList.contains("delete")){
      let url = e.target.value
      let fname = url.split("/").pop()
      let foldername = url.split("/")[3]
      let bucketname = url.split(".")[0].split("//")[1]
      console.log(fname,foldername,bucketname)
      fetch("/deletefile",{
        method: "POST",
        headers: {
      'Content-Type': 'application/json; charset=UTF-8'
    },
    body:JSON.stringify({bucketname,folder:foldername,filename:fname})
      })
      .then(response => response.json())
      .then(data =>{
        if(data.msg === "File has been Deleted"){
          alert("File has been Deleted")
          window.location.reload();
        }
      })
    }
  })
  

    function selectChange2(e){
      var xmlhttp = new XMLHttpRequest();
      xmlhttp.onreadystatechange = function() {
      if (xmlhttp.readyState == 4&& xmlhttp.status == 200) {   // XMLHttpRequest.DONE == 4
       if (xmlhttp.status == 200) {
         let result = JSON.parse(xmlhttp.responseText)
        console.log(result)
    //     fullresult = result.result1;
    //      let result1 = [];
    //      for(let i=0;i<result.result.length;i++)
    //      result1.push(result.result[i]);
    //     let select = document.getElementById("folder")
    //     if(select.options.length !=0) select.innerHTML = ''
    //     let opt1 = document.createElement("option")
    //     opt1.value=''
    //     opt1.innerHTML=''
    //     select.appendChild(opt1) 
		// result1.forEach(name =>{
    //       let opt = document.createElement('option');
    //       opt.value = name;
    //       opt.innerHTML = name;
    //       select.appendChild(opt);
    //      })
          //  document.getElementById("myDiv").innerHTML = xmlhttp.responseText;
       }
       else if (xmlhttp.status == 400) {
          alert('There was an error 400');
       }
       else {
           alert('something else other than 200 was returned');
       }
    }
  };
  
  xmlhttp.open("GET", `ajaxupload3/${bucketname}/${e.value}`, true);
  xmlhttp.send();
    }
  </script>
  
